#include <Servo.h>

Servo motor_1;
Servo motor_2;
Servo motor_3;
Servo motor_4;

#define enA 4  // Enable1 L298 Pin enA 
#define in1 6  // Motor1 L298 Pin in1 
#define in2 7  // Motor1 L298 Pin in2 
#define in3 8  // Motor2 L298 Pin in3 
#define in4 9  // Motor2 L298 Pin in4 
#define enB 5  // Enable2 L298 Pin enB 

int servo1 = 90;
int servo2 = 110;
int servo3 = 40;
int servo4 = 50;

char state = 0;

void setup() {
  pinMode(enA, OUTPUT); 
  pinMode(in1, OUTPUT); 
  pinMode(in2, OUTPUT); 
  pinMode(in3, OUTPUT);   
  pinMode(in4, OUTPUT); 
  pinMode(enB, OUTPUT);

  motor_1.attach(10);
  motor_2.attach(11);
  motor_3.attach(12);
  motor_4.attach(13);

  motor_1.write(servo1); 
  motor_2.write(servo2); 
  motor_3.write(servo3); 
  motor_4.write(servo4); 
  
  Serial.begin(9600); // Bluetooth module communication
}

void loop() {
  if (Serial.available() > 0) {
    state = Serial.read(); 
    Serial.println(state);
  }

  digitalWrite(enA, HIGH); 
  digitalWrite(enB, HIGH); 

  switch (state) {
    case '1':
      forword();
      Serial.println("Moving Forward");
      state = 0;
      break;
    case '2':
      backword();
      Serial.println("Moving Backward");
      state = 0;
      break;
    case '3':
      turnLeft();
      state = 0;
      break;
    case '4':
      turnRight();
      state = 0;
      break;
    case '5':
      Stop();
      state = 0;
      break;
    case '6':
      turnLeft();
      delay(400);
      Stop();
      state = 0;
      break;
    case '7':
      turnRight();
      delay(400);
      Stop();
      state = 0;
      break;
    case '8':
      if (servo1 < 180) servo1++;
      motor_1.write(servo1);
      state = 0;
      break;
    case '9':
      if (servo1 > 0) servo1--;
      motor_1.write(servo1);
      state = 0;
      break;
    case 'A':
      if (servo2 > 0) servo2--;
      motor_2.write(servo2);
      state = 0;
      break;
    case 'B':
      if (servo2 < 180) servo2++;
      motor_2.write(servo2);
      state = 0;
      break;
    case 'C':
      if (servo3 > 0) servo3--;
      motor_3.write(servo3);
      state = 0;
      break;
    case 'D':
      if (servo3 < 180) servo3++;
      motor_3.write(servo3);
      state = 0;
      break;
    case 'E':
      if (servo4 < 180) servo4++;
      motor_4.write(servo4);
      state = 0;
      break;
    case 'F':
      if (servo4 > 0) servo4--;
      motor_4.write(servo4);
      state = 0;
      break;
  }
}

// Motor control functions
void forword() {
  digitalWrite(in1, HIGH); 
  digitalWrite(in2, LOW);  
  digitalWrite(in3, LOW);  
  digitalWrite(in4, HIGH); 
}

void backword() {
  digitalWrite(in1, LOW);  
  digitalWrite(in2, HIGH); 
  digitalWrite(in3, HIGH); 
  digitalWrite(in4, LOW);  
}

void turnRight() {
  digitalWrite(in1, LOW);  
  digitalWrite(in2, HIGH);  
  digitalWrite(in3, LOW);  
  digitalWrite(in4, HIGH); 
}

void turnLeft() {
  digitalWrite(in1, HIGH); 
  digitalWrite(in2, LOW);  
  digitalWrite(in3, HIGH); 
  digitalWrite(in4, LOW);  
}

void Stop() {
  digitalWrite(in1, LOW); 
  digitalWrite(in2, LOW); 
  digitalWrite(in3, LOW); 
  digitalWrite(in4, LOW); 
}
